<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>coding on</title><link>https://yifanyin.github.io/tags/coding/</link><description>Recent content in coding on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 17 Nov 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://yifanyin.github.io/tags/coding/index.xml" rel="self" type="application/rss+xml"/><item><title>NumPy</title><link>https://yifanyin.github.io/notes/numpy/</link><pubDate>Tue, 17 Nov 2020 00:00:00 +0000</pubDate><guid>https://yifanyin.github.io/notes/numpy/</guid><description>Numpy is the foundation of scientific [[python]]
Basic numpy array shape is n-rows * n-columns. For example
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 a = np.</description></item><item><title>Computational thinking</title><link>https://yifanyin.github.io/notes/Computational-thinking/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yifanyin.github.io/notes/Computational-thinking/</guid><description>In 2020, a student in Matlab course was struggling to translate a task into actual code. What material can help her?</description></item><item><title>Fortran</title><link>https://yifanyin.github.io/notes/fortran/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yifanyin.github.io/notes/fortran/</guid><description>Basic Fortran is column-major: meaning the first index change the fastest and the values are placed next to each other in the memory add -g -fcheck=all to get more debugging info if segmentation faults appear.</description></item><item><title>Good coding for your research</title><link>https://yifanyin.github.io/notes/Good-coding-for-your-research/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yifanyin.github.io/notes/Good-coding-for-your-research/</guid><description>Handbook There&amp;rsquo;s no way around not coding in research these days. Patrick Mineault who was a neuroscientist and software engineer create this web book: The Good Research Code Handbook</description></item><item><title>JupyterLab how-to</title><link>https://yifanyin.github.io/notes/JupyterLab/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yifanyin.github.io/notes/JupyterLab/</guid><description> Start: jupyter lab Interactive matplotlib plot %matplotlib widget</description></item><item><title>Making a github-hosted website</title><link>https://yifanyin.github.io/notes/Making-a-github-hosted-website/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yifanyin.github.io/notes/Making-a-github-hosted-website/</guid><description>I use Jekyll for static-site generation, combining with Atom for git and Obsidian for writing. Here are the resources I use to pimp this site.</description></item><item><title>Making maps with Python</title><link>https://yifanyin.github.io/notes/maps-with-python/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yifanyin.github.io/notes/maps-with-python/</guid><description>In my [[notes/prj-tempmatch|NZ project]], I decided to plot my results entirely in [[notes/python|Python]] and [[notes/matplotlib|matplotlib]] to keep the pipeline simple. Turned out if you can fix the projection, you are half-way there.</description></item><item><title>matplotlib</title><link>https://yifanyin.github.io/notes/matplotlib/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yifanyin.github.io/notes/matplotlib/</guid><description>Resources Scientific visualization in matplotlib Effectively using matplotlib If you take nothing else away from this post, I recommend the following steps for learning how to use matplotlib: Learn the basic matplotlib terminology, specifically what is a Figure and an Axes.</description></item><item><title>Parallel Computing</title><link>https://yifanyin.github.io/notes/parallel-computing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yifanyin.github.io/notes/parallel-computing/</guid><description>Intro The tutorial from the Lawrence Livermore National Laboratory And the one from ETH Parallel computer taxonomy by Flynn SISD: Base case of a single instruction stream and single data stream SIMD Single instruction: all processing units execute the same instruction at any given clock cycle Multiple data: Each processing unit can operate on a different data element MISD: multiband filter, code cracking Multiple instructions, single data Different processes execute on the same data.</description></item><item><title>Python</title><link>https://yifanyin.github.io/notes/Python/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yifanyin.github.io/notes/Python/</guid><description>Basic Checking the object type: type(some_object) Mutable and immutable objects Reference When an object is initiated, it is assigned a unique object id.</description></item><item><title>SCSS how-to</title><link>https://yifanyin.github.io/notes/SCSS-how-to/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yifanyin.github.io/notes/SCSS-how-to/</guid><description>Length unit em size of the &amp;ldquo;M&amp;rdquo; letter. When used with font-size, it inherit the font size of the font size of the parent element.</description></item></channel></rss>